
一、CASE命令有两种语句格式

语法形式1
CASE expression
	WHEN expression_11 THEN expression_12
	...
	WHEN expression_n1 THEN expression_n2
	[ELSE expression_m]
END

该语句的执行过程是：将CASE后面表达式的值与各WHEN子句中的表达式的值进行比较，如果两者相等，
则返回THEN后的表达式的值，然后跳出CASE语句，否则返回ELSE子句中的表达式的值。
ELSE子句是可选项。当CASE语句中不包含ELSE子句时，如果所有比较失败时，CASE语句将返回NULL。

【例】从数据表v_user中，选取id、gender，如果gender为“1”则输出“M”，如果为“2”输出“F”。
SELECT stud_id, sex=CASE gender
                      WHEN ’男’ THEN ’M’
                      WHEN ’女’ THEN ’F’
                    END
FROM stud_info

SELECT id, 
CASE gender
	WHEN '1' THEN 'M' 
    WHEN '2' THEN 'F' 
	ELSE '人妖' gender
END
FROM v_user;

语法形式2
CASE 
	WHEN condition_expression_1 THEN expression_1
	...
	WHEN condition_expression_n THEN expression_n
	[ELSE expression_m]
END

该语句的执行过程是：首先测试WHEN后的条件表达式的值，如果其值为真，则返回THEN后面的表达式的值，否则测试下一个WHEN子句中的表达式的值，如果所有WHEN子句后的表达式的值都为假，则返回ELSE后的表达式的值，如果在CASE语句中没有ELSE子句，则CASE表达式返回NULL。
注意：CASE命令可以嵌套到SQL语句中。

【例】从v_grade表中查询所有同学考试成绩情况，凡成绩为空者输出“未考”、小于60分输出“不及格”、60分至70分输出“及格”、70分至90分输出“良好”、大于或等于90分时输出“优秀”。
SELECT id, name, score, 
CASE 
	WHEN grade IS NULL THEN ’未考’
	WHEN grade<60 THEN ’不及格’
	WHEN grade>=60 AND grade<70 THEN ’及格’
	WHEN grade>=70 AND grade<90 THEN ’良好’
	WHEN grade>=90 THEN ’优秀’
END
FROM v_grade

需要注意的问题是，Case函数只返回第一个符合条件的值，剩下的Case部分将会被自动忽略。

比如说，下面这段SQL，永远无法得到“two”这个结果
CASE 
col_1 IN ('a', 'b') WHEN 'one'
col_1 IN ('a') WHEN 'two'
ELSE 'other'
END

二、使用案例
有如下数据
insert into c_cp(country, po) values ('中国',600);
insert into c_cp(country, po) values ('美国',100);
insert into c_cp(country, po) values ('加拿大',100);
insert into c_cp(country, po) values ('英国',200);
insert into c_cp(country, po) values ('法国',300);
insert into c_cp(country, po) values ('日本',250);
insert into c_cp(country, po) values ('德国',200);
insert into c_cp(country, po) values ('墨西哥',50);
insert into c_cp(country, po) values ('印度',250);

根据这个国家人口数据，统计亚洲和北美洲的人口数量。应该得到下面这个结果。 
洲 		人口
亚洲 	1100
北美洲 	250
其他 	700


想要解决这个问题，你会怎么做？生成一个带有洲Code的View，是一个解决方法，但是这样很难动态的改变统计的方式。 
如果使用Case函数，SQL代码如下: 
SELECT SUM(population), 
CASE country
	WHEN '中国'     THEN '亚洲'
	WHEN '印度'     THEN '亚洲'
	WHEN '日本'     THEN '亚洲'
	WHEN '美国'     THEN '北美洲'
	WHEN '加拿大'  THEN '北美洲'
	WHEN '墨西哥'  THEN '北美洲'
ELSE '其他' END 
FROM Table_A 
GROUP BY 
CASE country 
	WHEN '中国'     THEN '亚洲' 
	WHEN '印度'     THEN '亚洲' 
	WHEN '日本'     THEN '亚洲' 
	WHEN '美国'     THEN '北美洲' 
	WHEN '加拿大'  THEN '北美洲' 
	WHEN '墨西哥'  THEN '北美洲' 
ELSE '其他' END; 





