
/**
 * Simple interface for objects that are sources for an {@link InputStream}.
 *
 * <p>This is the base interface for Spring's more extensive {@link Resource} interface.
 *
 * <p>For single-use streams, {@link InputStreamResource} can be used for any
 * given {@code InputStream}. Spring's {@link ByteArrayResource} or any
 * file-based {@code Resource} implementation can be used as a concrete
 * instance, allowing one to read the underlying content stream multiple times.
 * This makes this interface useful as an abstract content source for mail
 * attachments, for example.
 *
 * @author Juergen Hoeller
 * @since 20.01.2004
 * @see java.io.InputStream
 * @see Resource
 * @see InputStreamResource
 * @see ByteArrayResource
 */
public interface InputStreamSource {
	
	返回一个InputStream。
	期望每次调用返回一个“新鲜”的流。
	这种需求是特别重要的，当你考虑一个API，比如JavaMail，当创建邮件附件时它需要能够多次读取流。
	对于这样一种使用场景，每次getInputStream()调用返回一个“新鲜”的流是必须的。
	返回：
		底层资源的输入流（不能为null）
	抛出：
		IOException 如果流不能被打开
	参见：
		org.springframework.mail.javamail.MimeMessageHelper#addAttachment(String, InputStreamSource)
	InputStream getInputStream() throws IOException;
	
}
