https://my.oschina.net/zudajun/blog?sort=time&p=3&temp=1515047695009


<i>SqlSession
	<c>DefaultSqlSession
	<c>SqlSessionManager

<i>SqlSessionFactory
	<c>DefaultSqlSessionFactory
	<c>SqlSessionManager


在DefaultSqlSessionFactory中取Configuration，
通过Configuration获取

DefaultSqlSessionFactory.java部分源码
private SqlSession openSessionFromDataSource(ExecutorType execType, TransactionIsolationLevel level, boolean autoCommit) {
	Transaction tx = null;
	try {
		//构造函数传入configuration参数，取得Environment
		final Environment environment = configuration.getEnvironment();
		final TransactionFactory transactionFactory = getTransactionFactoryFromEnvironment(environment);
		tx = transactionFactory.newTransaction(environment.getDataSource(), level, autoCommit);
		final Executor executor = configuration.newExecutor(tx, execType);
		return new DefaultSqlSession(configuration, executor, autoCommit);
	} catch (Exception e) {
		closeTransaction(tx); // may have fetched a connection so lets call close()
		throw ExceptionFactory.wrapException("Error opening session.  Cause: " + e, e);
	} finally {
		ErrorContext.instance().reset();
	}
}