
-- 表结构
CREATE TABLE int_demo (
    id INT(11) NOT NULL AUTO_INCREMENT,
    a INT(11) NOT NULL,
    b INT(11) UNSIGNED ZEROFILL NOT NULL,
    c INT(5) DEFAULT NULL,
    d INT(5) UNSIGNED ZEROFILL NOT NULL,
    e INT(15) DEFAULT NULL,
    PRIMARY KEY (`id`)
)

-- 插入两条数据
INSERT INTO int_demo (a, b, c, d, e) VALUES (1, 1, 1, 1, 1);
INSERT INTO int_demo (a, b, c, d, e) VALUES (1234567890, 1234567890, 1234567890, 1234567890, 1234567890);

-- 查询数据
select * from int_demo;
id	a			b			c			d			e
1	1			00000000001	1			00001		1
2	1234567890	01234567890	1234567890	1234567890	1234567890
注释：如果用navicate软件查询出来并不会显示左边的0，但把数据导出时可看到真实的数据，猜测是软件对数据格式进行了处理？

结论
1. 如果一个字段设置了无符号和填充零属性，那么无论这个字段存储什么数值，数值的长度都会与设置的显示宽度一致，如上述例子中的字段b，插入数值1显示为00000000001，左边补了10个零直至长度达到11位；
2. 设置字段的显示宽度并不限制字段存储值的范围，比如字段d设置为int(5)，但是仍然可以存储1234567890这个10位数字；
3. 设置的字符宽度只对数值长度不满足宽度时有效，如d字段int(5)，插入1时，长度不足5，因此在左边补充4个零直到5位，但是插入1234567890时超过了5位，这时的显示宽度就起不了作用了。

参考
https://segmentfault.com/a/1190000012479448?utm_source=tag-newest
项目sb/sb08,路径 com.vic.sb08.Sb08ApplicationTests#testInsert

