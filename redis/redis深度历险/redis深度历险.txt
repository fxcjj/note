
应用1
分布式锁

原子操作
setnx(set if not exists)

setnx lock:victor true
ok
do something...
del lock:victor
1

del出现问题，会导致死锁
expire 5

setnx和expire不是原子指令，还是有问题

set 扩展参数

set lock true ex 5 nx //setnx和expire是原子指令


超时问题
1. redis分布式不要用于较长时间的任务
2. 如果真的偶尔出现了，数据出现的小波错乱可能需要人工介入解决
3. 超时时间和业务执行时间拉开

比较value再删除，使用lua脚本
if redis.call("get",keys[1]) == argv[1] then
	return redis.call("del",keys[1])

Reentrant
	1. 不建议使用重入锁
	2. ThreadLocal


应用2
延时队列
list，底层链表结构
lpush/rpush
rpop/lpop
brpop/blpop //阻塞

延时队列的实现
zset

应用3
位图
ascii 码
setbit s 1 1
get s
getbit
bitcount //位图统计
bitpos //位图查找

bitfield //3.2版本后
有三个子指令
get/set/incrby
对指定位片段进行读写，64位

溢出策略子指令overflow
溢出行为：折返wrap,失败报错不执行fail,饱和截断sat


应用4
HyperLogLog
提供不精确的去重计数方案

pfadd //添加
pfcount //统计

12K


应用5
bf.add
bf.exists
bf.madd //批量添加
bf.mexists //一次查询多个元素是否存在

RedisLabs提供了一个单独的包JReBloom，但它是基于Jedis-3.0


应用6
简单限流
zset来实现简单限流


应用7
漏斗限流
funnel

redis-cell提供了一个限流Redis模块。该模块使用了漏斗算法，
并提供了原子限流指令。
cl.throttle //指令

cl.throttle victor:reply 15 30 60 1
15 capacity 漏斗容量
30 operations / 60 seconds 漏水速率
1 need 1 quota

应用8
GeoHash
地理位置
算附近的人等

geoadd //增加
geodist //距离
geopos //获取元素位置
geohash //获取元素的hash值
georadiusbymember //查询附近的其它元素

建议Geo的数据使用单独的Redis实例部署，不使用集群环境。
如果数据量过亿甚至更大，就需要对Geo数据进行拆分，按国家拆分、
按省拆分、按市拆分，在人口特大城市甚至可以按区拆分。
这样就可以显著降低单个zset集合的大小.

应用9
Scan

keys 正则字符串

1. 没有offset, limit参数
有几百w个满足条件,满屏,难受

2. keys算法是遍历算法，复杂度是O(n)，

2.8后scan

redis-cli -h localhost -p 7001 -bigkeys

原理1
Redis是个单线程程序
Node.js，Nginx也是单线程

所有数据都在内存中，所有的运算都是内存级别的运算。
正因为Redis是单线程，所以要小心使用Redis指令，对于
那些时间复杂度为O(n)级别的指令，一定要谨慎使用，一不小心
就可能会导致Redis卡顿。

Redis单线程如何处理那么多的并发客户端连接？
多路复用

非阻塞IO



集群3
去中心化
16384个slot

slot定位算法
crc32(key)%16384得到具体槽位

强制某个key挂在特定槽位上，通过tag

跳转
	-MOVED 3999 127.0.0.1:6381
-: indicates error
MOVED: jump directive
3999: the slot location of target node
when client received MOVED, change local slot mapping table immediately

migration
	1. redis-trib, ruby language development.
	2. middle status, migrating, importing, keysinslot, blocking
	3. asking

fail-tolerant
	1. cluster-require-full-coverage 允许部分节点故障

network jitter
	1. cluster-node-timeout
	当某个节点持续timeout的时间失联时，才可以认定该节点出现故障，
	需要进行主从切换。
	2. cluster-slave-validity-factor
	倍乘系数

PFAIL-Possibly Fail & Fail
	1. Gossip
	2. 大多数

Cluster Basic Usage
	1. redis-py don't support cluster mode, to use cluster, must
	install another package, this package depend on redis-py.
	pip install redis-py-cluster
	StricRedisCluster(startup_nodes=startup_nodes, decode_responses=Ture)
	
slot migration awareness
	1. moved
	2. asking

cluster change awareness
	2 situation
	1. target node down, client will throw a ConnectionError
	2. update the cluster info manually, ClusterDown 





