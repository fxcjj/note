

https://my.oschina.net/feichexia/blog/196575
https://www.cnblogs.com/ilinuxer/p/5017839.html
https://docs.oracle.com/javase/9/tools/jstack.htm#JSWOR748
https://www.cnblogs.com/chenpi/p/5377445.html
https://www.cnblogs.com/chengJAVA/p/5821218.html
http://www.cnblogs.com/zhengyun_ustc/archive/2013/01/06/dumpanalysis.html


一、jstack介绍
二、命令格式
三、常用参数
四、使用案例


一、jstack介绍
jstack是jdk自带的工具，同时也是JVM性能调优出镜率非常高的一款软件。
jstack用于打印出给定的java进程ID或core file或远程调试服务的Java堆栈信息，如果是在64位机器上，
需要指定选项"-J-d64"，Windows的jstack使用方式只支持以下的这种方式：
jstack [-l] pid
如果java程序崩溃生成core文件，jstack工具可以用来获得core文件的java stack和native stack的信息，
从而可以轻松地知道java程序是如何崩溃和在程序何处发生问题。
另外，jstack工具还可以附属到正在运行的java程序中，看到当时运行的java程序的java stack和native stack的信息, 如果现在运行的java程序呈现hung的状态，jstack是非常有用的。

jstack可以生成jvm当前时间点的线程快照。

线程快照就是当前jvm内每一条线程正在执行的方法堆栈的集合。
而生成线程快照的主要原因：
1. 通过线程快照定位线程出现长时间停顿的原因，如线程间死锁、死循环、请求外部资源导致的长时间等待。
2. 通过线程快照分析当前执行方法的调用关系来确定异常信息的源头。


二、命令格式
jstack [option] pid
jstack [option] executable core
jstack [option] [server-id@]remote-hostname-or-IP

三、常用参数
3.1 options： 
executable Java executable from which the core dump was produced.

(可能是产生core dump的java可执行程序)

core 将被打印信息的core dump文件

remote-hostname-or-IP 远程debug服务的主机名或ip

server-id 唯一id,假如一台主机上多个远程debug服务 

3.2 基本参数：
-F 当’jstack [-l] pid’没有相应的时候强制打印栈信息

-l 长列表. 打印关于锁的附加信息,例如属于java.util.concurrent的ownable synchronizers列表.

-m 打印java和native c/c++框架的所有栈信息.

-h | -help打印帮助信息

pid 需要被打印配置信息的java进程id,可以用jps查询.

二、使用案例

