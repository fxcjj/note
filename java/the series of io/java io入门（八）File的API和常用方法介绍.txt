一、File介绍
File 是“文件”和“目录路径名”的抽象表示形式。
File 直接继承于Object，实现了Serializable接口和Comparable接口。
实现Serializable接口，意味着File对象支持序列化操作。
而实现Comparable接口，意味着File对象之间可以比较大小；File能直接被存储在有序集合(如TreeSet、TreeMap中)。

查看java.io.File源码

1)新建目录
方法1
File file = new File("a/b");
file.mkdir(); //使用此方法父目录a必须存在
file.mkdirs(); //使用此方法，会创建所有父目录

方法2：传入的参数是完整路径对应的URI=
URI uri = new URI("file:/home/victor/dir");   
File sub = new File(uri);  
sub.mkdirs(); //创建多级目录

注意：相对路径和绝对路径的区别

2)新建文件
方法1
File dir = new File("dir"); //获取目录dir对应的File
File file1 = new File(dir, "file1.txt");
file1.createNewFile();  

方法2：传入的参数是完整路径对应的URI
URI uri = new URI("file:/home/victor/dir/b.txt");
File file4 = new File(uri);
file4.createNewFile();

二、例子
public class FileTest {
    public static void main(String[] args) throws Exception {
        testDir();
        testFile();
		testURI();
    }
	
	//URI方式创建目录及文件
    private static void testURI() throws Exception {
        URI uri = new URI("file:/home/a/b/c");
        File dir = new File(uri);
        boolean mkdirs = dir.mkdirs();
        System.out.println(mkdirs);
        
        URI uri1 = new URI("file:/home/a/b/c/cc.txt");
        File file = new File(uri1);
        boolean createNewFile = file.createNewFile();
        System.out.println(createNewFile);
    }

    //创建文件
    private static void testFile() throws Exception {
        File file = new File("d:/coupling/pore/a.txt");
        file.createNewFile();
        
        String absolutePath = file.getAbsolutePath();
        String name = file.getName();
        String parent = file.getParent();
        String path = file.getPath();
        
        System.out.println("absolutePath = " + absolutePath);
        System.out.println("name = " + name);
        System.out.println("parent = " + parent);
        System.out.println("path = " + path);
        
    }

    //创建目录
    private static void testDir() {
        //创建子目录pore，若coupling父目录不存在，则fail
        File dir = new File("d:/coupling/pore");
        //dir.mkdir(); //此方法不行！
        dir.mkdirs(); //此方法可以！
        
        String absolutePath = dir.getAbsolutePath();
        String name = dir.getName();
        String parent = dir.getParent();
        String path = dir.getPath();
        
        System.out.println("absolutePath = " + absolutePath);
        System.out.println("name = " + name);
        System.out.println("parent = " + parent);
        System.out.println("path = " + path);
    }
}

















