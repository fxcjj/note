抽象类Number是类BigDecimal, BigInteger, Byte, Double, Float, Integer, Long和Short的超类。

Number的子类必须提供将represented numeric value转换成byte, double, float, int, long和short的方法。


以int形式返回指定的数值。这可能会涉及到舍入或取整（截取）。
返回：
	转换为 int 类型后该对象表示的数值。
public abstract int intValue();


以long形式返回指定的数值。这可能会涉及到舍入或取整（截取）。
返回：
	转换为 long 类型后该对象表示的数值。
public abstract long longValue();


/**
 * Returns the value of the specified number as a <code>float</code>.
 * This may involve rounding.
 *
 * @return  the numeric value represented by this object after conversion
 *          to type <code>float</code>.
 */
public abstract float floatValue();

/**
 * Returns the value of the specified number as a <code>double</code>.
 * This may involve rounding.
 *
 * @return  the numeric value represented by this object after conversion
 *          to type <code>double</code>.
 */
public abstract double doubleValue();

/**
 * Returns the value of the specified number as a <code>byte</code>.
 * This may involve rounding or truncation.
 *
 * @return  the numeric value represented by this object after conversion
 *          to type <code>byte</code>.
 * @since   JDK1.1
 */
public byte byteValue() {
return (byte)intValue();
}

/**
 * Returns the value of the specified number as a <code>short</code>.
 * This may involve rounding or truncation.
 *
 * @return  the numeric value represented by this object after conversion
 *          to type <code>short</code>.
 * @since   JDK1.1
 */
public short shortValue() {
return (short)intValue();
}

