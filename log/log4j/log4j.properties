#root logger
log4j.rootLogger = off, stdout, log, D, I, W, E

# storage path
log4j.FilePath = /opt/tomcat_log/app

#console appender
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = %d %p [%c] - <%m>%n

# daily log
log4j.appender.log = org.apache.log4j.DailyRollingFileAppender
log4j.appender.log.File = ${log4j.FilePath}/all.log
# info level
log4j.appender.log.Threshold = info
log4j.appender.log.Encoding = UTF-8
log4j.appender.log.Append = true
log4j.appender.log.layout = org.apache.log4j.PatternLayout
log4j.appender.log.layout.ConversionPattern= %d %p [%c] - <%m>%n

# create log on level debug
#log4j.appender.D = com.picahealth.common.log.LevelRollingFileAppender
log4j.appender.D = org.apache.log4j.RollingFileAppender
log4j.appender.D.File = ${log4j.FilePath}/debug.log
log4j.appender.D.MaxFileSize = 1024KB
log4j.appender.D.Encoding = UTF-8
log4j.appender.D.Threshold = debug
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern= %d %p [%c] - <%m>%n
log4j.appender.D.MaxBackupIndex = 10

# create log on level info
#log4j.appender.I = com.picahealth.common.log.LevelRollingFileAppender
log4j.appender.I = org.apache.log4j.RollingFileAppender
log4j.appender.I.File = ${log4j.FilePath}/info.log
log4j.appender.I.MaxFileSize = 1024KB
log4j.appender.I.Encoding = UTF-8
log4j.appender.I.Threshold = info
log4j.appender.I.layout = org.apache.log4j.PatternLayout
log4j.appender.I.layout.ConversionPattern= %d %p [%c] - <%m>%n
log4j.appender.I.MaxBackupIndex = 50

# create log on level warn
#log4j.appender.W = com.picahealth.common.log.LevelRollingFileAppender
log4j.appender.W = org.apache.log4j.RollingFileAppender
log4j.appender.W.File = ${log4j.FilePath}/warn.log
log4j.appender.W.MaxFileSize = 1024KB
log4j.appender.W.Encoding = UTF-8
log4j.appender.W.Threshold = warn
log4j.appender.W.layout = org.apache.log4j.PatternLayout
log4j.appender.W.layout.ConversionPattern= %d %p [%c] - <%m>%n
log4j.appender.W.MaxBackupIndex = 10

# create log on level error
#log4j.appender.E = com.picahealth.common.log.LevelRollingFileAppender
log4j.appender.E = org.apache.log4j.RollingFileAppender
log4j.appender.E.File = ${log4j.FilePath}/error.log
log4j.appender.E.MaxFileSize = 1024KB
log4j.appender.E.Encoding = UTF-8
log4j.appender.E.Threshold = error
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern= %d %p [%c] - <%m>%n
log4j.appender.E.MaxBackupIndex = 10

# Control logging for other open source packages
# acegisecurity
log4j.logger.net.sf.navigator = error
log4j.logger.net.sf.acegisecurity = warn
log4j.logger.net.sf.acegisecurity.intercept.event.LoggerListener = warn
log4j.logger.org.apache.commons = error
log4j.logger.org.apache.struts = warn
log4j.logger.org.displaytag = error
log4j.logger.org.springframework = warn
log4j.logger.org.apache.velocity = warn

# mybatis
log4j.logger.org.apache.ibatis = debug
log4j.logger.org.mybatis.spring = debug
log4j.logger.org.mybatis.spring.transaction = warn
log4j.logger.org.mybatis.spring.SqlSessionUtils = warn
log4j.logger.org.springframework.jdbc.datasource.DataSourceTransactionManager = debug

# mongo
log4j.logger.org.mongodb.driver.cluster = warn

# httpclient
log4j.logger.org.apache.http = off

# app
log4j.logger.com.picahealth.wit =  debug
log4j.logger.com.picahealth.wit.dao = debug
#log4j.logger.additivity.com.picahealth.wit.dao = false
log4j.logger.com.picahealth.wit.service = debug
#log4j.logger.additivity.com.picahealth.wit.service = false

# java sql
log4j.logger.java.sql.Connection = debug
log4j.logger.java.sql.Statement = debug
log4j.logger.java.sql.PreparedStatement = debug
log4j.logger.java.sql.ResultSet = debug
