
From
http://blog.jobbole.com/58523/

http://aosabook.org/en/distsys.html


1.1. Principles of Web Distributed Systems Design
	Availability
	Performance
	Reliability
	Scalability
	Manageability
	Cost
	
1.2. The Basics
Example: Image Hosting Application

Services
	Splitting out reads and writes

Redundancy
	Image hosting application with redundancy

Partitions
	Image hosting application with redundancy and partitioning

1.3. The Building Blocks of Fast and Scalable Data Access

Thankfully there are many options that you can employ to make this easier, four of the 
more important ones are caches, proxies, indexes and load balancers.

Caches
	Global Cache
	Distributed Cache

Proxies
At a basic level, a proxy server is an intermediate piece of hardware/software that receives requests from clients and 
relays them to backend origin servers. Typically, proxies are used to filter requests, log requests, or sometimes 
transform requests(by adding/removing headers, encrypting/decrypting, or compression).

Figure 1.14: Using a proxy server to collapse requests

Figure 1.15: Using a proxy to collapse requests for data that is spatially close together

Indexs
	
Load Balancers

Queues

1.4. Conclusion
Designing efficient systems with fast access to lots of data is exciting,
ant there are lots of great tools that enable all kinds of new applications.
This chapter covered just a few examples, barely scratching the surface, 
but there are many more-and there will only continue to be more innovation in the space.





